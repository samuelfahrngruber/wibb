import org.apache.tools.ant.taskdefs.condition.Os

plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'fr.brouillard.oss.gradle.jgitver' version '0.9.1'
	id 'maven-publish'
}

group = 'at.wibb'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

sourceSets {
	slowTest {
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	slowTestImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
	slowTestImplementation 'org.springframework.boot:spring-boot-starter-test'
}

configurations {
	slowTestImplementation.extendsFrom implementation
}

test {
	useJUnitPlatform()
}

publishing {

	publications {
		bootJava(MavenPublication) {
			artifact bootJar
		}
	}

	repositories {
		maven {
			name = "GitHubPackages"
			url = "https://maven.pkg.github.com/samuelfahrngruber/wibb"
			credentials {
				username = System.getenv("GITHUB_ACTOR")
				password = System.getenv("GITHUB_TOKEN")
			}
		}
	}
}

tasks.register('installAngularDependencies', Exec) {
	String npm = 'npm'
	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
		npm = 'npm.cmd'
	}

	it.workingDir("../wibb-angular")
	it.commandLine(npm, "install")
}

tasks.register('grabAngularApp', Exec) {
	String npm = 'npm'
	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
		npm = 'npm.cmd'
	}

	it.workingDir("../wibb-angular")
	it.commandLine(npm, "run", "build-for-ws-j")
}

tasks.getByName("grabAngularApp").dependsOn("installAngularDependencies")
tasks.getByName("processResources").dependsOn("grabAngularApp")

tasks.register('slowTest', Test) {
	description = 'Runs slow (integration, e2e, ...) tests.'
	group = 'verification'

	useJUnitPlatform()

	testClassesDirs = sourceSets.slowTest.output.classesDirs
	classpath = sourceSets.slowTest.runtimeClasspath
	shouldRunAfter test
}

tasks.getByName("check").dependsOn("test")
tasks.getByName("check").dependsOn("slowTest")
